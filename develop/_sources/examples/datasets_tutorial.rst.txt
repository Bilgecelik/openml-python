.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_datasets_tutorial.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_datasets_tutorial.py:


========
Datasets
========

How to list and download datasets.



.. code-block:: python


    import openml
    import pandas as pd







List datasets
=============



.. code-block:: python


    openml_list = openml.datasets.list_datasets()  # returns a dict

    # Show a nice table with some key data properties
    datalist = pd.DataFrame.from_dict(openml_list, orient='index')
    datalist = datalist[[
        'did', 'name', 'NumberOfInstances',
        'NumberOfFeatures', 'NumberOfClasses'
    ]]

    print("First 10 of %s datasets..." % len(datalist))
    datalist.head(n=10)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    First 10 of 2611 datasets...


Exercise 1
**********

* Find datasets with more than 10000 examples.
* Find a dataset called 'eeg_eye_state'.
* Find all datasets with more than 50 classes.



.. code-block:: python

    datalist[datalist.NumberOfInstances > 10000
             ].sort_values(['NumberOfInstances']).head(n=20)







.. code-block:: python

    datalist.query('name == "eeg-eye-state"')







.. code-block:: python

    datalist.query('NumberOfClasses > 50')







Download datasets
=================



.. code-block:: python


    # This is done based on the dataset ID ('did').
    dataset = openml.datasets.get_dataset(68)

    # Print a summary
    print("This is dataset '%s', the target feature is '%s'" %
          (dataset.name, dataset.default_target_attribute))
    print("URL: %s" % dataset.url)
    print(dataset.description[:500])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    This is dataset 'eeg-eye-state', the target feature is 'Class'
    URL: https://test.openml.org/data/v1/download/68/eeg-eye-state.arff
    **Author**: Oliver Roesler, it12148'@'lehre.dhbw-stuttgart.de  
    **Source**: [UCI](https://archive.ics.uci.edu/ml/datasets/EEG+Eye+State), Baden-Wuerttemberg, Cooperative State University (DHBW), Stuttgart, Germany  
    **Please cite**:   

    All data is from one continuous EEG measurement with the Emotiv EEG Neuroheadset. The duration of the measurement was 117 seconds. The eye state was detected via a camera during the EEG measurement and added later manually to the file after analysing the video fr


Get the actual data.

Returned as numpy array, with meta-info
(e.g. target feature, feature names, ...)



.. code-block:: python

    X, y, attribute_names = dataset.get_data(
        target=dataset.default_target_attribute,
        return_attribute_names=True,
    )
    eeg = pd.DataFrame(X, columns=attribute_names)
    eeg['class'] = y
    print(eeg[:10])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    V1           V2           V3  ...          V13          V14  class
    0  4329.229980  4009.229980  4289.229980  ...  4635.899902  4393.850098      0
    1  4324.620117  4004.620117  4293.850098  ...  4632.819824  4384.100098      0
    2  4327.689941  4006.669922  4295.379883  ...  4628.720215  4389.229980      0
    3  4328.720215  4011.790039  4296.410156  ...  4632.310059  4396.410156      0
    4  4326.149902  4011.790039  4292.310059  ...  4632.819824  4398.459961      0
    5  4321.029785  4004.620117  4284.100098  ...  4628.209961  4389.740234      0
    6  4319.490234  4001.030029  4280.509766  ...  4625.129883  4378.459961      0
    7  4325.640137  4006.669922  4278.459961  ...  4622.049805  4380.509766      0
    8  4326.149902  4010.770020  4276.410156  ...  4627.180176  4389.740234      0
    9  4326.149902  4011.280029  4276.919922  ...  4637.439941  4393.330078      0

    [10 rows x 15 columns]


Exercise 2
**********
* Explore the data visually.



.. code-block:: python

    eegs = eeg.sample(n=1000)
    _ = pd.plotting.scatter_matrix(
        eegs.iloc[:100, :4],
        c=eegs[:100]['class'],
        figsize=(10, 10),
        marker='o',
        hist_kwds={'bins': 20},
        alpha=.8,
        cmap='plasma'
    )



.. image:: /examples/images/sphx_glr_datasets_tutorial_001.png
    :class: sphx-glr-single-img




**Total running time of the script:** ( 0 minutes  2.568 seconds)


.. _sphx_glr_download_examples_datasets_tutorial.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: datasets_tutorial.py <datasets_tutorial.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: datasets_tutorial.ipynb <datasets_tutorial.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
